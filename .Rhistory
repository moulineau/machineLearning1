score <- prediction(pred_glm,test_set[,17]) # we use the predicted probabilities not the 0 or 1
performance(score,"auc") # y.values
plot(performance(score,"tpr","fpr"),col="green")
abline(0,1,lty=8)
X1 = seq(min(training_set[, 7]) - 1, max(training_set[, 7]) + 1, by = 0.01)
X2 = seq(min(training_set[, 9]) - 1, max(training_set[, 9]) + 1, by = 0.01)
X3 = seq(min(training_set[, 12]) - 1, max(training_set[, 12]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2,X3)
model_glm=glm(y~age+balance+duration, family=binomial,data=training_set)
summary(model_glm)
pred_glm = predict(model_glm, newdata = test_set[,-17], type="response")
head(pred_glm)
pred_glm_0_1 = ifelse(pred_glm >= 0.5, 1,0)
head(pred_glm_0_1)
cm_glm = table(pred_glm_0_1, test_set[,17])
cm_glm
mosaicplot(cm_glm,col=sample(1:8,2))
model_glm=glm(y~campaign+balance+duration, family=binomial,data=training_set)
summary(model_glm)
pred_glm = predict(model_glm, newdata = test_set[,-17], type="response")
head(pred_glm)
pred_glm_0_1 = ifelse(pred_glm >= 0.5, 1,0)
head(pred_glm_0_1)
cm_glm = table(pred_glm_0_1, test_set[,17])
cm_glm
mosaicplot(cm_glm,col=sample(1:8,2))
X1 = seq(min(training_set[, 6]) - 1, max(training_set[, 6]) + 1, by = 0.01)
X2 = seq(min(training_set[, 12]) - 1, max(training_set[, 12]) + 1, by = 0.01)
X3 = seq(min(training_set[, 13]) - 1, max(training_set[, 13]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2,X3)
model_lda=lda(y~campaign+balance+duration, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
mosaicplot(cmlda,col=sample(1:8,2))
X1 = seq(min(training_set[, 6]) - 1, max(training_set[, 6]) + 1, by = 0.01)
X2 = seq(min(training_set[, 12]) - 1, max(training_set[, 12]) + 1, by = 0.01)
X3 = seq(min(training_set[, 13]) - 1, max(training_set[, 13]) + 1, by = 0.01)
grid_set = expand.grid(X1, X2,X3)
colnames(grid_set) = c('Age', 'EstimatedSalary')
plot(test_set[, 1:2],
main = 'Decision Boundary LDA',
xlab = 'Age', ylab = 'Estimated Salary')
points(test_set[1:2], pch = 21, bg = ifelse(test_set[, 17] == 1, 'blue', 'red3'))
pred_grid = predict(model_lda, newdata = grid_set)$class
contour(X1, X2, matrix(as.numeric(pred_grid), length(X1), length(X2)), add = TRUE)
grid_set = expand.grid(X1, X2,X3)
colnames(grid_set) = c('Age', 'EstimatedSalary','ok')
plot(test_set[, c(6,12,13)],
main = 'Decision Boundary LDA',
xlab = 'Age', ylab = 'Estimated Salary')
chisq.test(bank_marketing$campaign,bank_marketing$duration)
model_lda=lda(y~campaign+balance, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
mosaicplot(cmlda,col=sample(1:8,2))
model_lda=lda(y~campaign+duration, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
mosaicplot(cmlda,col=sample(1:8,2))
model_lda=lda(y~campaign+balance+duration, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
model_lda=lda(y~campaign+balance+duration+housing, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
mosaicplot(cmlda,col=sample(1:8,2))
model_lda=lda(y~campaign+balance+duration+loan, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
mosaicplot(cmlda,col=sample(1:8,2))
model_lda=lda(y~campaign+balance+duration, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
score.lda <- prediction(pred_lda$posterior[,2],test_set[,17])
performance(score.lda,"auc") # y.values
plot(performance(score.lda,"tpr","fpr"),col="green")
abline(0,1,lty=8)
model_lda=lda(y~campaign:balance+duration, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
mosaicplot(cmlda,col=sample(1:8,2))
model_lda=lda(y~campaign*balance+duration, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
mosaicplot(cmlda,col=sample(1:8,2))
model_qda <- qda(y~campaign*balance+duration, data=training_set)
summary(classifier.qda)
pred_qda = predict(model_qda, newdata = test_set[,-17])
prediction_qda=pred_qda$class
cmqda = table(prediction_qda, test_set[,17])
cmqda
mosaicplot(cmqda,col=sample(1:8,2))
score.lda <- prediction(pred_lda$posterior[,2],test_set[,17])
performance(score.lda,"auc") # y.values
plot(performance(score.lda,"tpr","fpr"),col="green")
abline(0,1,lty=8)
score.qda <- prediction(pred_qda$posterior[,2],test_set[,17])
performance(score.qda,"auc") # y.values
plot(performance(score.qda,"tpr","fpr"),col="red")
abline(0,1,lty=8)
performance(score.lda,"auc") # y.values
plot(performance(score.lda,"tpr","fpr"),col="green")
performance(score.qda,"auc") # y.values
plot(performance(score.qda,"tpr","fpr"),col="red",add=T)
abline(0,1,lty=8)
AUC.scorelda=performance(score.lda,"auc")@y.values[[1]]
AUC.scorelda
AUC.scoreqda=performance(score.qda,"auc")@y.values[[1]]
AUC.scoreqda
model_qda2 <- qda(y~contact+loan, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda
model_qda2 <- qda(y~campaign+duration, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda
AUC.scorelda=performance(score.lda,"auc")@y.values[[1]]
AUC.scorelda
AUC.scoreqda=performance(score.qda,"auc")@y.values[[1]]
AUC.scoreqda
AUC.scorelda=performance(score.lda,"auc")@y.values[[1]]
AUC.scorelda
AUC.scoreqda=performance(score.qda,"auc")@y.values[[1]]
AUC.scoreqda
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign+balance, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*balance+loan, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*balance+age, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+balance, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+education, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
AUC.scorelda=performance(score.lda,"auc")@y.values[[1]]
AUC.scorelda
AUC.scoreqda=performance(score.qda,"auc")@y.values[[1]]
AUC.scoreqda
model_qda2 <- qda(y~., data=training_set)
summary(model_qda2)
model_qda2 <- qda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
AUC.scorelda=performance(score.lda,"auc")@y.values[[1]]
AUC.scorelda
AUC.scoreqda=performance(score.qda,"auc")@y.values[[1]]
AUC.scoreqda
model_qda2 <- qda(y~campaign+poutcome+month, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_lda=lda(y~., data=training_set)
summary(model_lda)
predglm=glm(y~.,family=binomial,data=training_set)
predglm=glm(y~.,family=binomial,data=training_set)
resume(predglm)
summary(predglm)
model_qda2 <- qda(y~campaign*duration+poutcome+contact+marital, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+contact, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~duration+poutcome+contact, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+contact, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+month+contact, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+month*contact, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
predglm=glm(y~.,family=binomial,data=training_set)
summary(predglm)
model_qda2 <- qda(y~contact+duration+poutcome+month, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+month:contact, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_qda2 <- qda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
#'
#'
mosaicplot(~ y + housing, data=bank_marketing,main = "MosaicPlot of two categorical variables: y & housing",color = 2:3, las = 1)
mosaicplot(~ y + contact, data=bank_marketing,main = "MosaicPlot of two categorical variables: y & housing",color = 2:3, las = 1)
chisq.test(bank_marketing$campaign,bank_marketing$duration)
cor(bank_marketing$campaign,bank_marketing$duration)
model_lda=lda(y~campaign*balance+duration, data=training_set)
summary(model_lda)
pred_lda = predict(model_lda, newdata = test_set[,-17])
prediction_lda=pred_lda$class
cmlda = table(prediction_lda, test_set[,17])
cmlda
mosaicplot(cmlda,col=sample(1:8,2))
AnalyseMatrix<-function(x){
accuracy <-(x[1,1]+x[2,2])/sum(x)
cat("accuracy : ")
print(accuracy)
precision<-x[1,1]/(x[1,1]+x[2,1])
cat("precision : ")
print(precision)
sensitivity<- x[1,1]/(x[1,1]+x[1,2])
cat("sensitivity :")
print(sensitivity)
specificity<-x[2,2]/(x[2,2]+x[1,2])
cat("specificity : ")
print(specificity)
}
AnalyseMatrix(cmlda)
model_qda <- qda(y~campaign*balance+duration, data=training_set)
#'Let's compute a qda model (Quadratic Discriminant Analysis)
summary(model_qda)
pred_qda = predict(model_qda, newdata = test_set[,-17])
prediction_qda=pred_qda$class
cmqda = table(prediction_qda, test_set[,17])
cmqda
mosaicplot(cmqda,col=sample(1:8,2))
#'This predictor seems better. Let's compute the accuracy, the precision, the sensitivity and the specificity to have more informations.
#'
AnalyseMatrix(cmqda)
#'This predictor seems better. Let's compute the accuracy, the precision, the sensitivity and the specificity to have more informations.
#'
AnalyseMatrix(cmqda)
AnalyseMatrix(cmlda)
score.lda <- prediction(pred_lda$posterior[,2],test_set[,17])
score.qda <- prediction(pred_qda$posterior[,2],test_set[,17])
score.lda
score.lda <- prediction(pred_lda$posterior[,2],test_set[,17])
score.qda <- prediction(pred_qda$posterior[,2],test_set[,17])
performance(score.lda,"auc") # y.values
plot(performance(score.lda,"tpr","fpr"),col="green")
performance(score.qda,"auc") # y.values
plot(performance(score.qda,"tpr","fpr"),col="red",add=T)
abline(0,1,lty=8)
AUC.scorelda=performance(score.lda,"auc")@y.values[[1]]
AUC.scorelda
AUC.scoreqda=performance(score.qda,"auc")@y.values[[1]]
AUC.scoreqda
AUC.scoreqda2
model_qda2 <- lda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_qda2)
pred_qda2 = predict(model_qda2, newdata = test_set[,-17])
prediction_qda2=pred_qda$class
cmqda2 = table(prediction_qda, test_set[,17])
cmqda2
mosaicplot(cmqda2,col=sample(1:8,2))
score.qda2 <- prediction(pred_qda2$posterior[,2],test_set[,17])
AUC.scoreqda2=performance(score.qda2,"auc")@y.values[[1]]
AUC.scoreqda2
model_lda2 <- lda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_lda2)
pred_qda2 = predict(model_lda2, newdata = test_set[,-17])
prediction_qda2=pred_lda$class
cmqla2 = table(prediction_lda, test_set[,17])
cmqla2
mosaicplot(cmqla2,col=sample(1:8,2))
score.qda2 <- prediction(pred_lda2$posterior[,2],test_set[,17])
AUC.scorelda2=performance(score.lda2,"auc")@y.values[[1]]
AUC.scorelda2
model_lda2 <- lda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_lda2)
pred_lda2 = predict(model_lda2, newdata = test_set[,-17])
prediction_lda2=pred_lda$class
cmqla2 = table(prediction_lda, test_set[,17])
cmqla2
mosaicplot(cmqla2,col=sample(1:8,2))
score.qda2 <- prediction(pred_lda2$posterior[,2],test_set[,17])
AUC.scorelda2=performance(score.lda2,"auc")@y.values[[1]]
AUC.scorelda2
model_lda2 <- lda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_lda2)
pred_lda2 = predict(model_lda2, newdata = test_set[,-17])
prediction_lda2=pred_lda2$class
cmqla2 = table(prediction_lda, test_set[,17])
cmqla2
mosaicplot(cmqla2,col=sample(1:8,2))
score.qda2 <- prediction(pred_lda2$posterior[,2],test_set[,17])
AUC.scorelda2=performance(score.lda2,"auc")@y.values[[1]]
AUC.scorelda2
model_lda2 <- lda(y~campaign*duration+poutcome+month, data=training_set)
summary(model_lda2)
pred_lda2 = predict(model_lda2, newdata = test_set[,-17])
prediction_lda2=pred_lda2$class
cmqla2 = table(prediction_lda, test_set[,17])
cmqla2
mosaicplot(cmqla2,col=sample(1:8,2))
score.lda2 <- prediction(pred_lda2$posterior[,2],test_set[,17])
AUC.scorelda2=performance(score.lda2,"auc")@y.values[[1]]
AUC.scorelda2
cmqla2
AnalyseMatrix(cmqla2)
AUC.scorelda2
#'We have an accuracy of 0.89% whcich is not bad compare to our previous model.
#'
score.lda2 <- prediction(pred_lda2$posterior[,2],test_set[,17])
plot(performance(score.lda,"tpr","fpr"),col="green")
plot(performance(score.qda,"tpr","fpr"),col="red",add=T)
plot(performance(score.lda2,"tpr","fpr"),col="blue",add=T)
abline(0,1,lty=8)
